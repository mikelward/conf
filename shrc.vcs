# Version control additions to .shrc.

# Functions to run to determine the current version control system, registered
# by each VCS, e.g. vcs_detect[git]=git_detect in ~/.shrc.vcs.git.
# vcs_detect functions should echo the name of the detected vcs (e.g. "git")
# or silently return false.
declare -A vcs_detect

# print the name of the version control system in use in $PWD
# TODO: cache the result
vcs() {
    local detect
    for detect in "${vcs_detect[@]}"; do
        "$detect" && return
    done
    false
}

# create version control functions to do the right thing based on vcs "$PWD"
# TODO: fork merge, etc.
for command in add allknown amend branch branches \
    change changed changes commit diffs \
    fix incoming lint outgoing pending prereview presubmit projectroot pull \
    push review rootdir stageall status submit; do
    # remove any alias created in .shrc
    case "$(type "$command" 2>/dev/null)" in *alias*)
        unalias "$command"
        ;;
    esac
    # create the function
    eval "$command"'() {
    local vcs="$(vcs "$PWD")"
    if test -n "$vcs"; then
        "${vcs}_'"$command"'" "$@"
    fi
    }'
done

check() {
    save && prereview
}

project() {
    basename "$(projectroot)"
}

save() {
    allknown && fix
    # TODO: also snapshot/stage all
}

submit() {
    check && pull && presubmit && push
}

for f in "$HOME"/.shrc.vcs.*; do
    if ! test -f "$f"; then
        echo "$f is not readable"
        continue
    fi
    source "$f"
done
