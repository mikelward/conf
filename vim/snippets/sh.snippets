# #!/bin/bash
snippet #!
	#!/bin/bash
	
snippet if
	if [ ${1:condition} ]
	then
		${2:#statements}
	fi
snippet elif
	elif [ ${1:condition} ]
	then
		${2:#statements}
snippet for
	for ${1:name} in $${2:list}
	do
		${3:#statements}
	done
snippet fori
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ ))
	do
		${3:#statements}
	done
snippet while
	while [ ${1:condition} ]
	do
		${2:#statements}
	done
snippet until
	until [ ${1:condition} ]
	do
		${2:#statements}
	done
snippet case
	case ${1:word} in
	${2:pattern})
		${3}
		;;
	*)
		${4}
		;;
	esac
snippet tempdir
	abort()
	{
		error "Signal received, aborting"
		exit 1

		# bash will fall thru and run cleanup via the trap 0
	}

	cleanup()
	{
		if [ -d "$TEMPDIR" ]
		then
			rm -rf "$TEMPDIR"
		fi
	}

	scriptname=${0##*/}
	TEMPDIR=/tmp/"$scriptname".$$

	if [ -e "$TEMPDIR" ]
	then
		error "Temporary directory $TEMPDIR already exists"
		exit 1
	fi
	mkdir "$TEMPDIR"
	if [ $? -ne 0 ]
	then
		error "Cannot create temporary directory $TEMPDIR"
		exit 1
	fi
	trap 'abort' 1 2 3 15
	trap 'cleanup; exit' 0

snippet getopts
	usage()
	{
		cat <<EOF 1>&2
	Usage: $scriptname [-h]
	EOF
	}

	scriptname=${0##*/}

	while getopts ":h${1:options}" option
	do
		case $option in
		${2:option})
			${3}
			;;
		h)
			usage
			exit 0
			;;
		':')
			echo "Missing argument to -$option" 1>&2
			usage
			exit 2
			;;
		'?')
			echo "Invalid option -$OPTARG" 1>&2
			usage
			exit 2
			;;
		*)
			echo "Program does not support -$option yet" 1>&2
			usage
			exit 2
			;;
		esac
	done
	shift $((OPTIND - 1))


