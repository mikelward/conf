# register git VCS
git_detect() {
    quiet git branch --color=never && echo git
}
vcs_detect[git]=git_detect

git_add() {
    git add "$@"
}

# print the name of the currently active git branch
git_branch() {
    git branch 2>/dev/null | while read star branch; do
        if test "$star" = "*"; then
            echo "$branch"
            break
        fi
    done
}

# print the name of all (local by default) git branches
git_branches() {
    git branch "$@"
}

git_changes() {
    git diff --patience "$@"
}

git_diffs() {
    git diff --patience "$@"
}

git_fix() {
    git fix "$@"
}

# print commits that would be pulled
git_incoming() {
    git log --oneline HEAD..origin/HEAD
}

git_lint() {
    git lint "$@"
}

# print commits that would be pushed
git_outgoing() {
    git log --oneline origin/HEAD..HEAD
}

git_pending() {
    git status "$@"
}

git_prereview() {
    git_hook pre-commit
}

git_presubmit() {
    git_hook pre-push
}

git_projectroot() {
    git root
}

git_pull() {
    git pull
}

git_hook() {
    local script="$(git rev-parse --git-dir)/hooks/$1"
	shift
	if test -x "$script"; then
	    "$script" "$@"
	else
		echo "No $script hook" >&2
	fi
}

# send the current change for Gerrit review
git_review() {
    git push origin HEAD:refs/for/master/$(git_branch)${1+%r=$1}
}

git_rootdir() {
    git rootdir
}

git_status() {
    git status "$@"
}
